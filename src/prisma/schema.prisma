generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  user_id          String           @id @unique
  email            String           @unique
  image_url        String
  isSubscribed     Boolean          @default(false)
  subscriptionEnds DateTime?
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @updatedAt
  organisations    Organisation[]   @relation("OrganisationAdmins")
  jobApplications  JobApplication[]
}

model Organisation {
  org_id            String    @id @default(uuid())
  organisation_name String
  image_url         String
  description       String?
  website           String?
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  admins            User[]    @relation("OrganisationAdmins")
  jobPosts          JobPost[]
}

model JobPost {
  post_id        String              @id @default(uuid())
  title          String
  description    String
  type           JobTypeEnum
  status         JobPostStatus       @default(DRAFT)
  location_type  LocationTypeEnum
  state          String?
  city           String?
  salary         Float?
  experience     ExperienceLevelEnum
  postedAt       DateTime            @default(now())
  updatedAt      DateTime            @updatedAt
  organisation   Organisation        @relation(fields: [organisationId], references: [org_id], onDelete: Cascade)
  organisationId String
  applications   JobApplication[]
}

model JobApplication {
  user      User                  @relation(fields: [userId], references: [user_id], onDelete: Cascade)
  userId    String
  post      JobPost               @relation(fields: [postId], references: [post_id], onDelete: Cascade)
  postId    String
  createdAt DateTime              @default(now())
  updatedAt DateTime              @updatedAt
  status    ApplicationStatusEnum
  rating    Int

  @@id(name: "application_id", [userId, postId])
}

enum LocationTypeEnum {
  IN_OFFICE
  HYBRID
  REMOTE
}

enum ExperienceLevelEnum {
  FRESHER
  JUNIOR
  MID_LEVEL
  SENIOR
}

enum JobPostStatus {
  DRAFT
  PUBLISHED
  DELISTED
}

enum JobTypeEnum {
  INTERNSHIP
  PART_TIME
  FULL_TIME
}

enum ApplicationStatusEnum {
  APPLIED
  REJECTED
  INTERESTED
  INTERVIEWED
  HIRED
}
